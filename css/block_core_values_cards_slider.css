@media (max-width: 991.98px) {
  .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg {
    padding-left: 0;
    padding-right: 0; } }

.block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider {
  position: relative; }
  .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide {
    display: flex;
    transition: all .4s ease;
    height: auto; }
    .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card {
      width: 80%;
      height: 100%;
      border: none; }
      @media (min-width: 992px) {
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card {
          width: 100%; } }
      .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body {
        padding: 0;
        border-radius: 1.5rem; }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body > .row {
          z-index: 9;
          position: relative;
          margin-right: 0;
          margin-left: 0; }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content {
          color: white;
          padding: 1rem;
          z-index: -9; }
          @media (min-width: 992px) {
            .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content {
              padding: 2rem 1.5rem 1.5rem; } }
          @media (min-width: 992px) {
            .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-text .card-title {
              font-size: 3rem; } }
          .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-text .card-copy p {
            font-size: .75rem;
            margin-bottom: .5rem; }
            @media (min-width: 375px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-text .card-copy p {
                font-size: 1rem;
                margin-bottom: 1.5rem; } }
            @media (min-width: 992px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-text .card-copy p {
                font-size: 1.25rem; } }
          .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .svg-code-wrapper {
            float: right;
            margin-right: -18px; }
            @media (min-width: 992px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .svg-code-wrapper {
                margin-right: -26px; } }
            .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .svg-code-wrapper svg {
              height: 180px; }
              @media (min-width: 375px) {
                .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .svg-code-wrapper svg {
                  height: 240px; } }
              @media (min-width: 992px) {
                .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .svg-code-wrapper svg {
                  height: 360px; } }
          .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .subheading {
            background: #072c51;
            line-height: 1;
            display: inline-block;
            border-radius: 40px;
            padding: .75rem 2rem .5rem;
            font-size: .8rem;
            margin-top: 1.5rem; }
            @media (min-width: 375px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .subheading {
                margin-top: 2rem; } }
            @media (min-width: 992px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .subheading {
                font-size: 1.25rem;
                margin-top: 3rem; } }
            @media (min-width: 1400px) {
              .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide .card .card-body .card-content .card-cta .subheading {
                padding: .75rem 3rem .5rem; } }
    @media (max-width: 991.98px) {
      .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide {
        display: flex;
        justify-content: center; }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide.swiper-slide-prev {
          transform: translateX(15%); }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide.swiper-slide-next {
          transform: translateX(-15%); } }
    @media (min-width: 768px) and (max-width: 991.98px) {
      .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide {
        display: flex;
        justify-content: center;
        transform: translateX(-18%); }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide:first-child {
          transform: translateX(18%); }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide.swiper-slide-prev {
          transform: translateX(36%) !important; }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide.swiper-slide-active {
          transform: translateX(18%); }
        .block_core_values_cards_slider-wrapper .block_core_values_cards_slider-container-lg .block_core_values_cards_slider .swiper-slide.swiper-slide-next {
          transform: translateX(0); } }

.block_core_values_cards_slider-wrapper .swiper-button-prev, .block_core_values_cards_slider-wrapper .swiper-button-next {
  top: 50% !important;
  margin-top: 0; }
  @media (min-width: 992px) {
    .block_core_values_cards_slider-wrapper .swiper-button-prev, .block_core_values_cards_slider-wrapper .swiper-button-next {
      height: 5rem;
      width: 3rem; } }
  @media (min-width: 1200px) {
    .block_core_values_cards_slider-wrapper .swiper-button-prev, .block_core_values_cards_slider-wrapper .swiper-button-next {
      height: 7.5rem;
      width: 4.5rem; } }
  .block_core_values_cards_slider-wrapper .swiper-button-prev:after, .block_core_values_cards_slider-wrapper .swiper-button-next:after {
    display: none; }
  @media (min-width: 992px) {
    .block_core_values_cards_slider-wrapper .swiper-button-prev svg, .block_core_values_cards_slider-wrapper .swiper-button-next svg {
      height: 5rem; } }
  @media (min-width: 1200px) {
    .block_core_values_cards_slider-wrapper .swiper-button-prev svg, .block_core_values_cards_slider-wrapper .swiper-button-next svg {
      height: 7.5rem; } }

.block_core_values_cards_slider-wrapper .swiper-button-prev {
  transform: translate(-150%, -50%) !important; }

.block_core_values_cards_slider-wrapper .swiper-button-next {
  transform: translate(150%, -50%) !important; }

@media (min-width: 992px) {
  .block_core_values_cards_slider-wrapper .container-lg {
    padding-left: 3rem;
    padding-right: 3rem; } }

@media (min-width: 1200px) and (max-width: 1489.98px) {
  .block_core_values_cards_slider-wrapper .container-lg {
    padding-left: 4.25rem;
    padding-right: 4.25rem; } }

.block_core_values_cards_slider-wrapper:not(.darker-theme) .swiper-button-next svg path:nth-child(2), .block_core_values_cards_slider-wrapper:not(.darker-theme) .swiper-button-prev svg path:nth-child(2) {
  fill: #072c51 !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
